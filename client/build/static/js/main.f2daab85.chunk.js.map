{"version":3,"sources":["utils/setAuthToken.js","actions/auth.js","actions/types.js","components/footer/Footer.styles.js","components/dashboard/Dashboard.styles.js","components/layout/Landing.styles.js","components/navbar/Navbar.styles.js","components/navbar/Navbar.js","components/dashboard/Dashboard.js","components/modals/successModal/SuccessModal.js","components/modals/errorModal/ErrorModal.js","components/layout/Landing.js","components/auth/login/Login.styles.js","components/auth/login/Login.js","components/auth/register/Register.styles.js","components/auth/register/Register.js","components/routing/PrivateRoute.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js","img/bitcoinbingologo.png","img/bingo-left.jpeg"],"names":["setAuthToken","token","axios","defaults","headers","common","loadUser","dispatch","a","localStorage","get","res","type","payload","data","console","log","Footer","styled","div","DashboardContainer","DashboardInner","LandingBody","LandingContainer","LandingInner","FormGroupContainer","h1","LandingTitle","LandingTitle2","p","LandingParagraph","LandingEnd","LeftSide","RightSide","NavbarContainer","connect","state","auth","logout","isAuthenticated","loading","page","authLinks","className","id","onClick","guestLinksRegister","guestLinksLogin","isRegisterPage","to","key","src","logo","user","useState","name","btcAddress","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","userInfo","put","_id","then","alert","catch","err","action","method","placeholder","SuccessModal","modalIsOpen","openModal","bind","closeModal","this","setState","props","open","isOpen","onRequestClose","appElement","document","getElementById","onClose","Component","ErrorModal","Landing","newUser","isSuccessModalOpen","setIsSuccessModalOpen","isErrorModalOpen","setIsErrorModalOpen","email","config","toLowerCase","trim","body","JSON","stringify","post","success","subscription","error","message","mainLogo","alt","required","layoutLogo","window","location","reload","BlackBoxLogin","LoginContainer","LoginInner","login","password","response","errors","minLength","BlackBoxRegister","RegisterContainer","RegisterInner","register","password2","component","rest","render","initialState","getItem","combineReducers","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","useEffect","exact","path","Dashboard","Login","Register","ReactDOM","module","exports"],"mappings":"uLAUeA,EARM,SAAAC,GACfA,EACFC,IAAMC,SAASC,QAAQC,OAAO,gBAAkBJ,SAEzCC,IAAMC,SAASC,QAAQC,OAAO,iB,wBCD5BC,EAAW,yDAAM,WAAMC,GAAN,eAAAC,EAAA,6DACtBC,aAAaR,OACfD,EAAaS,aAAaR,OAFF,kBAKNC,IAAMQ,IAAI,aALJ,OAKlBC,EALkB,OAMxBJ,EAAS,CACPK,KCTmB,cDUnBC,QAASF,EAAIG,OARS,gDAYxBC,QAAQC,IAAI,gBACZT,EAAS,CACPK,KCfkB,eDCI,yDAAN,uD,kYEHjB,IAAMK,EAASC,IAAOC,IAAV,K,sjBCAZ,IAAMC,EAAqBF,IAAOC,IAAV,KAQlBE,EAAiBH,IAAOC,IAAV,K,umFCRpB,IAAMG,EAAcJ,IAAOC,IAAV,KAiBXI,EAAmBL,IAAOC,IAAV,KAQhBK,EAAeN,IAAOC,IAAV,KAgBZM,EAAqBP,IAAOQ,GAAV,KASlBC,EAAeT,IAAOQ,GAAV,KASZE,EAAgBV,IAAOW,EAAV,KAWbC,EAAmBZ,IAAOQ,GAAV,KAYhBK,EAAab,IAAOQ,GAAV,KASVM,EAAWd,IAAOC,IAAV,KASRc,EAAYf,IAAOC,IAAV,K,2XCpGf,IAAMe,EAAkBhB,IAAOC,IAAV,KC8DbgB,eAJS,SAAAC,GAAK,MAAK,CAC9BC,KAAMD,EAAMC,QAGwB,CAAEC,ONYpB,kBAAM,SAAA/B,GAE1BA,EAAS,CAAEK,KCrES,cKuDPuB,EApDA,SAAC,GAA0D,IAAD,IAAvDE,KAAQE,EAA+C,EAA/CA,gBAAiBC,EAA8B,EAA9BA,QAAWF,EAAmB,EAAnBA,OAAQG,EAAW,EAAXA,KACpDC,EACF,4BACI,uBAAGC,UAAU,mBAAb,cACA,uBAAGC,GAAG,gBAAgBC,QAASP,GAC3B,uBAAGK,UAAU,wBAAyB,IACtC,0CAKNG,EACF,6BACI,uBAAGH,UAAU,SAAb,wBAKFI,EACF,6BACI,uBAAGJ,UAAU,iBAAb,YAOJK,EAA2B,aAATP,EAEtB,OADA1B,QAAQC,IAAI,mBAAqBgC,GAE7B,kBAACd,EAAD,KACI,yBAAKS,UAAU,aACX,kBAAC,IAAD,CAAMM,GAAG,KAAI,yBAAKC,IAAI,MAAMN,GAAG,cAAcO,IAAKC,QAEtD,yBAAKT,UAAU,cACRH,GACC,kBAAC,WAAD,KAAYD,EAAkBG,EAAYM,EAAiBF,EAAqBC,Q,8NClCpG,IA6EeZ,eAPS,SAAAC,GAEpB,OADArB,QAAQC,IAAI,eAAgBoB,EAAMC,KAAKgB,MAChC,CACHhB,KAAMD,EAAMC,QAIoB,KAAzBF,EA7EG,SAAC,GAAwB,IAAdkB,EAAa,EAArBhB,KAAQgB,KAAa,EACNC,mBAAS,CACrCC,KAAM,GACNC,WAAY,KAHsB,mBAC/BC,EAD+B,KACrBC,EADqB,KAM9BH,EAAqBE,EAArBF,KAAMC,EAAeC,EAAfD,WAERG,EAAW,SAAAC,GAAC,OAAIF,E,yVAAY,CAAD,GAAMD,EAAN,eAAiBG,EAAEC,OAAON,KAAOK,EAAEC,OAAOC,UAErEC,EAAQ,uCAAG,WAAMH,GAAN,eAAApD,EAAA,sDACboD,EAAEI,iBAEEC,EAAW,GACF,KAATV,IACAU,EAASV,KAAOA,GAED,KAAfC,IACAS,EAAST,WAAaA,GAE1BtD,IAAMgE,IAAN,qBAAwBb,EAAKc,KAAOF,GACnCG,MAAK,WACFV,EAAYH,EAAMC,GAClBa,MAAM,uBAGTC,OAAM,SAAAC,GACLxD,QAAQC,IAAIuD,MAjBD,2CAAH,sDAqBd,OACI,kBAACnD,EAAD,KACI,kBAAC,EAAD,CAAQqB,KAAM,cACd,6BACI,kBAACpB,EAAD,KACI,0BAAMsB,UAAU,OAAO6B,OAAO,oBAAoBC,OAAO,OAAOV,SAAU,SAAAH,GAAC,OAAIG,EAASH,KACpF,kBAACnC,EAAD,KACI,2BACIb,KAAK,OACL2C,KAAK,OACLX,GAAG,OACHD,UAAU,yBACV+B,YAAY,OACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,MAE5B,6BACA,2BACIhD,KAAK,OACL2C,KAAK,aACLX,GAAG,aACHD,UAAU,yBACV+B,YAAY,cACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,OAIhC,2BAAOhB,GAAG,mBAAmBhC,KAAK,SAASkD,MAAM,gB,8FCP1Da,G,YA3Db,aAAe,IAAD,+BACZ,iDACKvC,MAAQ,CACXwC,aAAa,GAGf,EAAKC,UAAY,EAAKA,UAAUC,KAAf,iBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,iBAPN,E,2EAWZE,KAAKC,SAAS,CAAEL,aAAa,M,mCAI7B7D,QAAQC,IAAI,uCACZgE,KAAKC,SAAS,CAAEL,aAAa,M,+BAGrB,IAAD,OAKP,OAJAI,KAAK5C,MAAMwC,YAAcI,KAAKE,MAAMC,KAKlC,kBAAC,KAAD,CACExC,UAAU,WACVyC,OAAQJ,KAAK5C,MAAMwC,YACnBS,eAAgBL,KAAKD,WAErBO,WAAYC,SAASC,eAAe,SAEpC,yBAAK7C,UAAU,iBACb,yBAAKA,UAAU,cAAcE,QAAS,kBAAM,EAAKqC,MAAMO,YAAvD,KADF,WAKE,6BACA,uBAAG9C,UAAU,2BACb,6BACA,wBAAIA,UAAU,yBAAd,sJACmC,6BADnC,mTAG2H,6BAH3H,2RAOE,6BACA,6BARF,UAUE,6BAVF,4B,GAzCiB+C,aCsDZC,G,YArDb,aAAe,IAAD,+BACZ,iDACKvD,MAAQ,CACXwC,aAAa,GAGf,EAAKC,UAAY,EAAKA,UAAUC,KAAf,iBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,iBAPN,E,2EAWZE,KAAKC,SAAS,CAAEL,aAAa,M,mCAI7BI,KAAKC,SAAS,CAAEL,aAAa,M,+BAGrB,IAAD,OAKP,OAJAI,KAAK5C,MAAMwC,YAAcI,KAAKE,MAAMC,KAKlC,kBAAC,KAAD,CACExC,UAAU,WACVyC,OAAQJ,KAAK5C,MAAMwC,YACnBS,eAAgBL,KAAKD,WAErBO,WAAYC,SAASC,eAAe,SAEpC,yBAAK7C,UAAU,iBACb,yBAAKA,UAAU,cAAcE,QAAS,kBAAM,EAAKqC,MAAMO,YAAvD,KADF,UAKE,6BACA,6BACA,wBAAI9C,UAAU,uBAAd,gCAAiE,6BAAM,6BAAvE,wPAE0C,6BAAM,6BAFhD,sGAGE,6BACA,6BAJF,UAME,6BANF,4B,GAvCe+C,a,+NCoBzB,IA+GeE,GA/GC,WACd,IAAIC,EADgB,EAGgCvC,oBAAS,GAHzC,mBAGbwC,EAHa,KAGOC,EAHP,OAI4BzC,oBAAS,GAJrC,mBAIb0C,EAJa,KAIKC,EAJL,OAMY3C,mBAAS,CACvC4C,MAAO,KAPW,mBAMbzC,EANa,KAMHC,EANG,KASZwC,EAAUzC,EAAVyC,MAGFvC,EAAW,SAAAC,GACf7C,QAAQC,IAAI,mBACZ0C,E,2VAAY,IAAKD,EAAN,eAAiBG,EAAEC,OAAON,KAAOK,EAAEC,OAAOC,UAUjDC,EAAQ,uCAAG,WAAOH,GAAP,qBAAApD,EAAA,6DACfoD,EAAEI,iBADa,SAGPmC,EAAS,CACb/F,QAAS,CACP,eAAgB,qBAGpByF,EAAU,CACRK,MAAOA,EAAME,cAAcC,QAGvBC,EAAOC,KAAKC,UAAUX,GAE5B9E,QAAQC,IAAI,gBACZD,QAAQC,IAAI,KAfC,SAgBKd,IAAMuG,KAAK,oBAAqBH,EAAMH,GAhB3C,OAgBPxF,EAhBO,OAiBbI,QAAQC,IAAI,iBACZD,QAAQC,IAAI,QAASL,GACf+F,EAAU/F,EAAIG,KAAK4F,QACJ/F,EAAIG,KAAK6F,aAG1BD,EACFX,GAAsB,GAEtBE,GAAoB,GA1BT,kDA8BblF,QAAQ6F,MAAM,KAAIC,SA9BL,0DAAH,sDAkCd,OACE,kBAACvF,EAAD,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACE,kBAACQ,EAAD,KACE,yBAAKmB,IAAK2D,IAAUC,IAAI,GAAGpE,UAAU,gBACrC,kBAAChB,EAAD,mBAAyB,8BACzB,kBAACC,EAAD,sBACA,kBAACE,EAAD,yCAAmD,6BAAnD,gBAAsE,0BAAMc,GAAG,OAAT,OAAtE,wBAAsI,6BACtI,kBAACb,EAAD,sDAA0D,6BAA1D,oBACA,0BAAMyC,OAAO,mBAAmBC,OAAO,OAAOV,SAAU,SAAAH,GAAC,OAAIG,EAASH,KACpE,kBAACnC,EAAD,KASE,2BACEb,KAAK,QACL2C,KAAK,QACLX,GAAG,QACHD,UAAU,eACV+B,YAAY,QACZf,SAAU,SAAAC,GAAC,OAAID,EAASC,IACxBoD,UAAQ,IAEV,4BAAQpE,GAAG,gBAAgBhC,KAAK,SAAS+B,UAAU,4BAAnD,oBASA,kBAAC1B,EAAD,oEAIN,kBAACgB,EAAD,KACE,yBAAKkB,IAAK8D,KAAYF,IAAI,cAAcpE,UAAU,uBAGtD,kBAAC,GAAD,CAAYwC,KAAMa,EAAkBP,QAAS,kBAAMQ,OACnD,kBAAC,GAAD,CAAcd,KAAMW,EAAoBL,QAAS,kBAtFrDM,GAAsB,QACtBmB,OAAOC,SAASC,e,ijCC1Cb,IAAMC,GAAgBnG,IAAOC,IAAV,MAoBbmG,GAAiBpG,IAAOC,IAAV,MASdoG,GAAarG,IAAOC,IAAV,M,+NCjBvB,IA0EegB,gBAJS,SAAAC,GAAK,MAAK,CAC9BG,gBAAiBH,EAAMC,KAAKE,mBAGQ,CAAEiF,MZzCrB,SAACtB,EAAOuB,GAAR,8CAAqB,WAAMlH,GAAN,mBAAAC,EAAA,6DAChC8F,EAAOC,KAAKC,UAAU,CAAEN,QAAOuB,aAC/BtB,EAAS,CACb/F,QAAS,CACP,eAAgB,qBAJkB,kBAQlBF,IAAMuG,KAAK,YAAaH,EAAMH,GARZ,OAQ9BxF,EAR8B,OASpCJ,EAAS,CACPK,KCnDqB,gBDoDrBC,QAASF,EAAIG,OAEfP,EAASD,KAb2B,kDAiBrB,KAAIoH,SAAS5G,KAAK6G,QAE7BtD,MAAM,wBAGV9D,EAAS,CACPK,KC/DkB,eDwCgB,0DAArB,wDYyCNuB,EA1ED,SAAC,GAAgC,IAA9BqF,EAA6B,EAA7BA,MAAOjF,EAAsB,EAAtBA,gBAAsB,EACVe,mBAAS,CACrC4C,MAAO,GACPuB,SAAU,KAH4B,mBACnChE,EADmC,KACzBC,EADyB,KAMlCwC,EAAoBzC,EAApByC,MAAOuB,EAAahE,EAAbgE,SAET9D,EAAW,SAAAC,GAAC,OAAIF,E,2VAAY,IAAKD,EAAN,eAAiBG,EAAEC,OAAON,KAAOK,EAAEC,OAAOC,UAErEC,EAAQ,uCAAG,WAAMH,GAAN,SAAApD,EAAA,sDACboD,EAAEI,iBACFwD,EAAMtB,EAAOuB,GAFA,2CAAH,sDAKd,OAAIlF,EACO,kBAAC,IAAD,CAAUU,GAAG,eAIpB,kBAACqE,GAAD,KACI,kBAAC,EAAD,CAAQ7E,KAAM,UACd,6BACI,kBAAC8E,GAAD,KAEI,0BAAM5E,UAAU,OAAOoB,SAAU,SAAAH,GAAC,OAAIG,EAASH,KAC3C,kBAACnC,EAAD,KACI,2BACIb,KAAK,QACL8D,YAAY,gBACZnB,KAAK,QACLO,MAAOoC,EACPvC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BoD,UAAQ,KAGhB,kBAACvF,EAAD,KACI,2BACIb,KAAK,WACL8D,YAAY,WACZnB,KAAK,WACLqE,UAAU,IACV9D,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,6BACA,2BAAOhB,GAAG,eAAehC,KAAK,SAASkD,MAAM,UAC7C,6BACA,6BACA,iDAEJ,kBAACuD,GAAD,yCACqC,6BACjC,0BAAM1E,UAAU,kBAAiB,kBAAC,IAAD,CAAMM,GAAG,aAAT,cAErC,kBAAChC,EAAD,qE,y0CCpEb,IAAM4G,GAAmB3G,IAAOC,IAAV,MA+BhB2G,IAdiB5G,IAAOC,IAAV,MAcMD,IAAOC,IAAV,OAUjB4G,GAAgB7G,IAAOC,IAAV,M,+NC5B1B,IA6GegB,gBAJS,SAAAC,GAAK,MAAK,CAC9BG,gBAAiBH,EAAMC,KAAKE,mBAGQ,CAAEyF,SdnGlB,SAAC,GAAD,IAAGzE,EAAH,EAAGA,KAAM2C,EAAT,EAASA,MAAO1C,EAAhB,EAAgBA,WAAYiE,EAA5B,EAA4BA,SAAUd,EAAtC,EAAsCA,aAAtC,8CAAyD,WAAMpG,GAAN,mBAAAC,EAAA,6DACvE2F,EAAS,CACX/F,QAAS,CACL,eAAgB,qBAGlBkG,EAAOC,KAAKC,UAAU,CAAEjD,OAAM2C,QAAO1C,aAAYiE,WAAUd,iBANY,kBAQvDzG,IAAMuG,KAAK,aAAcH,EAAMH,GARwB,OAQnExF,EARmE,OASzEJ,EAAS,CACLK,KCnCoB,mBDoCpBC,QAASF,EAAIG,OAXwD,gDAczEuD,MAAM,mBACN9D,EAAS,CACLK,KCxCiB,kBDwBoD,yDAAzD,wDcmGTuB,EA7GE,SAAC,GAAmC,IAAjC6F,EAAgC,EAAhCA,SAAUzF,EAAsB,EAAtBA,gBAAsB,EAChBe,mBAAS,CACrCC,KAAM,GACN2C,MAAO,GACP1C,WAAY,GACZiE,SAAU,GACVQ,UAAW,GACXtB,cAAc,IAP8B,mBACzClD,EADyC,KAC/BC,EAD+B,KAUxCH,EAA+DE,EAA/DF,KAAM2C,EAAyDzC,EAAzDyC,MAAO1C,EAAkDC,EAAlDD,WAAYiE,EAAsChE,EAAtCgE,SAAUQ,EAA4BxE,EAA5BwE,UAAWtB,EAAiBlD,EAAjBkD,aAEhDhD,EAAW,SAAAC,GAAC,OAAIF,E,2VAAY,IAAKD,EAAN,eAAiBG,EAAEC,OAAON,KAAOK,EAAEC,OAAOC,UAErEC,EAAQ,uCAAG,WAAMH,GAAN,SAAApD,EAAA,sDACboD,EAAEI,iBACEyD,IAAaQ,EACblH,QAAQC,IAAI,uBAAwB,UAEpCgH,EAAS,CAAEzE,OAAM2C,QAAO1C,aAAYiE,WAAUd,iBALrC,2CAAH,sDASd,OAAIpE,EACO,kBAAC,IAAD,CAAUU,GAAG,eAIpB,kBAAC6E,GAAD,KACI,kBAAC,EAAD,CAAQrF,KAAM,aACd,6BACI,kBAACsF,GAAD,KAEI,0BAAMpF,UAAU,OAAOoB,SAAU,SAAAH,GAAC,OAAIG,EAASH,KAC3C,kBAACnC,EAAD,KACI,2BACIb,KAAK,OACL8D,YAAY,OACZnB,KAAK,OACLO,MAAOP,EACPI,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BoD,UAAQ,KAGhB,kBAACvF,EAAD,KACI,2BACIb,KAAK,QACL8D,YAAY,gBACZnB,KAAK,QACLO,MAAOoC,EACPvC,SAAU,SAACC,GAAD,OAAOD,EAASC,IAC1BoD,UAAQ,KAGhB,kBAACvF,EAAD,KACI,2BACIb,KAAK,OACL8D,YAAY,cACZnB,KAAK,aACLqE,UAAU,KACV9D,MAAON,EACPG,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,kBAACnC,EAAD,KACI,2BACIb,KAAK,WACL8D,YAAY,WACZnB,KAAK,WACLqE,UAAU,IACV9D,MAAO2D,EACP9D,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,kBAACnC,EAAD,KACI,2BACIb,KAAK,WACL8D,YAAY,mBACZnB,KAAK,YACLqE,UAAU,IACV9D,MAAOmE,EACPtE,SAAU,SAACC,GAAD,OAAOD,EAASC,OAGlC,6BACA,2BAAOhD,KAAK,WAAWkD,MAAO6C,IApDlC,kFAqDI,6BAAM,6BACN,2BAAO/D,GAAG,kBAAkBhC,KAAK,SAASkD,MAAM,cAEpD,kBAAC+D,GAAD,iCAC6B,6BACzB,0BAAMlF,UAAU,kBAAiB,kBAAC,IAAD,CAAMM,GAAG,UAAT,WAErC,kBAAChC,EAAD,qE,SCjFLkB,gBAJS,SAAAC,GAAK,MAAK,CAChCC,KAAMD,EAAMC,QAGCF,EAtBM,SAAC,GAAD,IAAcuD,EAAd,EAAGwC,UAAH,IAAyB7F,KAAQE,EAAjC,EAAiCA,gBAAiBC,EAAlD,EAAkDA,QAAc2F,EAAhE,4CACnB,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAlD,GAAK,OACV3C,GAAoBC,EAGnB,kBAACkD,EAAcR,GAFf,kBAAC,IAAD,CAAUjC,GAAG,kB,wlBCRrB,IAAMoF,GAAe,CACjBpI,MAAOQ,aAAa6H,QAAQ,SAC5B/F,gBAAiB,KACjBC,SAAS,EACTa,KAAM,MCHKkF,8BAAgB,CAC3BlG,KDKW,WAAwC,IAA/BD,EAA8B,uDAAtBiG,GAAc7D,EAAQ,uCAC1C5D,EAAkB4D,EAAlB5D,KAAMC,EAAY2D,EAAZ3D,QACd,OAAOD,GACH,IfTmB,ceUf,OAAO,MACAwB,EADP,CAEIG,iBAAiB,EACjBC,SAAS,EACTa,KAAMxC,IAEd,IfnBwB,mBeoBxB,IfdqB,gBegBjB,OADAJ,aAAa+H,QAAQ,QAAS3H,EAAQZ,OAC/B,MACAmC,EADP,GAEOvB,EAFP,CAGI0B,iBAAiB,EACjBC,SAAS,IAEjB,If3BqB,gBe4BrB,IfzBkB,ae0BlB,IfvBkB,aewBlB,IftBc,SewBV,OADA/B,aAAagI,WAAW,SACjB,MACArG,EADP,CAEInC,MAAO,KACPsC,iBAAiB,EACjBC,SAAS,IAEjB,QACI,OAAOJ,MElCbsG,GAAa,CAACC,MAQLC,GANDC,uBACZC,GAJmB,GAMnBC,+BAAoBC,mBAAe,WAAf,EAAmBN,MCKrCjI,aAAaR,OACfD,EAAaS,aAAaR,OAG5B,IAuBegJ,GAvBH,WAKV,OAJAC,qBAAU,WACRN,GAAMrI,SAASD,OACd,IAGD,kBAAC,IAAD,CAAUsI,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAOO,OAAK,EAACC,KAAK,IAAIlB,UAAWtC,KACjC,iCACE,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAcuD,OAAK,EAACC,KAAK,aAAalB,UAAWmB,IACjD,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASlB,UAAWoB,KACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYlB,UAAWqB,WC9BvDC,IAASpB,OAAO,kBAAC,GAAD,MAAS7C,SAASC,eAAe,U,mBCJjDiE,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.f2daab85.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// load user\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      })\n\n    } catch (err) {\n      console.log(\"ERROR: \" + err);\n      dispatch({\n        type: AUTH_ERROR\n      })\n    }\n  }\n\n// register\nexport const register = ({ name, email, btcAddress, password, subscription }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    const body = JSON.stringify({ name, email, btcAddress, password, subscription })\n    try {\n        const res = await axios.post('/api/users', body, config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n    } catch (err) {\n        alert('Register failed')\n        dispatch({\n            type: REGISTER_FAIL,\n        })\n    }\n}\n\n// login\nexport const login = (email, password) => async dispatch => {\n    const body = JSON.stringify({ email, password });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    try {\n      const res = await axios.post('/api/auth', body, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    //   dispatch(setAlert('Login success', 'success'));\n\n    } catch (err) {\n      const errors = err.response.data.errors;\n      if (errors) {\n          alert('Error - login action')\n        // errors.forEach(error => dispatch(setAlert(error.msg, 'danger')))\n      }\n      dispatch({\n        type: LOGIN_FAIL\n      })\n    }\n  }\n\n// logout / clear profile\nexport const logout = () => dispatch => {\n  // dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n}","export const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\n\nexport const LOGOUT = 'LOGOUT';","import styled from 'styled-components';\n\nexport const Footer = styled.div`\n    bottom: 0;\n    color: white;\n    font-size: 16px;\n    height: 35px;\n    left: 0;\n    overflow: hidden;\n    padding-top: 5px;\n    position: absolute;\n    width: 100%;\n    text-align: center;\n    @media (max-width: 700px) {\n        font-size: 13px;\n    }\n`;","import styled from 'styled-components';\n\nexport const DashboardContainer = styled.div`\n    /* background: url('../img/showcase.jpg') no-repeat center center/cover; */\n    height: 110vh;\n    @media (max-width: 700px) {\n        height: 150vh;\n    }\n`;\n\nexport const DashboardInner = styled.div`\n    align-items: center;\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: center;\n    margin: auto;\n    margin-top: 150px;\n    text-align: center;\n    width: 80%;\n    @media (max-width: 700px) {\n        \n    }\n`;","import styled from 'styled-components';\n\nexport const LandingBody = styled.div`\n    background-image: url(../../img/img_bingo-left.png), url(../../img/img_bingo-right.png),\n        linear-gradient(180deg, #0089aa 0%, #003241 90%);\n    background-color: rgba(255, 255, 255, 0.4);\n    background-size: auto, 680px;\n    background-repeat: no-repeat;\n    background-position: bottom left, bottom right -180px;\n    color: #fff;\n    display: block;\n    font-family: \"Roboto\", sans-serif;\n    line-height: 1.6;\n    @media (max-width: 768px) {\n        height: 130vh;\n    }\n\n`;\n\nexport const LandingContainer = styled.div`\n    height: 110vh;\n    position: relative;\n    @media (max-width: 768px) {\n        height: 100%;\n    }\n`;\n\nexport const LandingInner = styled.div`\n    align-items: center;\n    color: #fff;\n    display: flex;\n    height: 100%;\n    justify-content: space-between;\n    margin: auto;\n    text-align: center;\n    width: 60%;\n    @media (max-width: 768px) {\n        height: 120vh;\n        text-align: center;\n        width: 90%;\n    }\n`;\n\nexport const FormGroupContainer = styled.h1`\n    margin-top: 20px;\n    text-align: left;\n    @media (max-width: 768px) {\n        width: 50%;\n    }\n\n`;\n\nexport const LandingTitle = styled.h1`\n    font-size: 45px;\n    font-family: Regular, Luckiest Guy;\n    text-align: left;\n    @media (max-width: 768px) {\n        font-size: 35px;\n        text-align: center;\n    }\n`;\nexport const LandingTitle2 = styled.p`\n    color: #FFB73C;\n    font-size: 45px;\n    font-family: Regular, Luckiest Guy;\n    text-align: left;\n    @media (max-width: 768px) {\n        font-size: 35px;\n        text-align: center;\n    }\n`;\n\nexport const LandingParagraph = styled.h1`\n    color: #B1E7F7;\n    font-family: 'Roboto', 'Bold Italic';\n    font-size: 20px;\n    font-style: italic;\n    text-align: left;\n    @media (max-width: 768px) {\n        font-size: 15px;\n        text-align: center;\n    }\n`;\n\nexport const LandingEnd = styled.h1`\n    font-size: 12px;\n    text-align: left;\n    @media (max-width: 768px) {\n        font-size: 11px;\n        text-align: center;\n    }\n`;\n\nexport const LeftSide = styled.div`\n    line-height: 1.5;\n    width: 50%;\n    @media (max-width: 768px) {\n        width: 100%;\n    }\n`;\n\n\nexport const RightSide = styled.div`\n    margin-left: 100px;\n    @media (max-width: 768px) {\n      display: none;\n    }\n`;\n","import styled from 'styled-components';\n\nexport const NavbarContainer = styled.div`\n    background-color: #004A60;\n    display: grid;\n    grid-template-columns: 42.3% 24.3% 33.3%;\n    height: 320px;\n    margin: 0 auto;\n    // position: fixed;\n    width: 100%;\n    z-index: 1;\n\n    @media (max-width: 700px) {\n        height: 250px;\n        display: block;\n    }\n`;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport logo from '../../img/bitcoinbingologo.png'\nimport { withRouter } from 'react-router-dom';\n// styles\nimport { NavbarContainer } from './Navbar.styles'\n// actions\nimport { logout } from '../../actions/auth'\n\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout, page }) => {\n    const authLinks = (\n        <ul>\n            <p className='dashboard-title'>MY ACCOUNT</p>\n            <a id='logout-button' onClick={logout}>\n                <i className='fas fa-sign-out-alt' />{' '}\n                <span>Logout</span>\n            </a>\n        </ul>\n    )\n\n    const guestLinksRegister = (\n        <div>\n            <p className='title'>CREATE YOUR ACCOUNT</p>\n            {/* <ul><Link to=\"/login\">Login</Link></ul>\n            <ul><Link to=\"/register\">/ &nbsp;&nbsp;&nbsp;Register</Link></ul> */}\n        </div>\n    )\n    const guestLinksLogin = (\n        <div>\n            <p className='welcome-title'>WELCOME</p>\n            {/* <ul><Link to=\"/login\">Login</Link></ul>\n            <ul><Link to=\"/register\">/ &nbsp;&nbsp;&nbsp;Register</Link></ul> */}\n        </div>\n    )\n\n    // console.log(\"props.location.pathname: \" + this.props.location.pathname);\n    let isRegisterPage = (page === \"register\");\n    console.log(\"isRegisterPage: \" + isRegisterPage);\n    return (\n        <NavbarContainer>\n            <div className='nav-child'>\n                <Link to=\"/\"><img key='idk' id='navbar-logo' src={logo}></img></Link>\n            </div>\n            <div className='nav-child'>\n                { !loading && (\n                    <Fragment>{ isAuthenticated ? authLinks : isRegisterPage ? guestLinksRegister : guestLinksLogin  }</Fragment>\n                )}\n            </div>\n        </NavbarContainer>\n    )\n}\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport sweetAlert from 'sweetalert'\n// actions\nimport { auth } from '../../actions/auth';\n// styles\nimport { Footer } from '../footer/Footer.styles';\nimport { DashboardButton, DashboardContainer, DashboardInner } from './Dashboard.styles'\nimport { FormGroupContainer } from '../layout/Landing.styles'\n// components\nimport Navbar from '../navbar/Navbar';\n\nconst Dashboard = ({ auth: { user } }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        btcAddress: ''\n    });\n\n    const { name, btcAddress } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        // Check which fields have been updated and then submit only those fields\n        let userInfo = {}\n        if (name !== \"\"){\n            userInfo.name = name;\n        }\n        if (btcAddress !== \"\"){\n            userInfo.btcAddress = btcAddress;\n        }\n        axios.put(`/api/users/${user._id}`, userInfo)\n        .then(() => {\n            setFormData(name, btcAddress);\n            alert('Account updated.');\n        //   this.props.onClose();\n        })\n        .catch(err => {\n          console.log(err);\n        });\n    }\n\n    return (\n        <DashboardContainer>\n            <Navbar page={\"dashboard\"} />\n            <div>\n                <DashboardInner>\n                    <form className='form' action=\"/api/subscription\" method=\"POST\" onSubmit={e => onSubmit(e)}>\n                        <FormGroupContainer>\n                            <input\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"name\"\n                                className=\"form-control-dashboard\"\n                                placeholder=\"Name\"\n                                onChange={e => onChange(e)}\n                            />\n                            <br />\n                            <input\n                                type=\"text\"\n                                name=\"btcAddress\"\n                                id=\"btcAddress\"\n                                className=\"form-control-dashboard\"\n                                placeholder=\"BTC Address\"\n                                onChange={e => onChange(e)}\n                            />\n                            {/* <DashboardButton className=\"btn\" type=\"submit\">EDIT</DashboardButton> */}\n                        </FormGroupContainer>\n                        <input id='dashboard-button' type=\"submit\" value=\"EDIT\" />\n                    </form>\n                    {/* <Footer>© 2019 Copyright Bitcoin Bingo, all rights reserved</Footer> */}\n                </DashboardInner>\n            </div>\n        </DashboardContainer>\n    )\n}\n\nDashboard.propTypes = {\n    auth: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => {\n    console.log('state.auth: ', state.auth.user)\n    return {\n        auth: state.auth\n    }\n}\n\nexport default connect(mapStateToProps, null)(Dashboard)\n","import React, { Component } from \"react\";\nimport Modal from \"react-modal\";\n// import axios from \"axios\";\n\nclass SuccessModal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    console.log('==> setState() before closing modal')\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    this.state.modalIsOpen = this.props.open;\n    // this.setState({ modelIsOpen: true });\n    // this.setState({ modalIsOpen });\n\n    return (\n      <Modal\n        className=\"bg-modal\"\n        isOpen={this.state.modalIsOpen}\n        onRequestClose={this.closeModal}\n        // gets rid of ERR: 'Please use `Modal.setAppElement(el)` or set `appElement={el}`\n        appElement={document.getElementById(\"root\")}\n      >\n        <div className=\"modal-content\">\n          <div className=\"close-modal\" onClick={() => this.props.onClose()}>\n            +\n          </div>\n          Success!\n          <br />\n          <i className=\"fas fa-thumbs-up fa-2x\"></i>\n          <br />\n          <h6 className=\"success-modal-writing\">Thanks for signing up. :) We don't plan to spam with you emails, we simply want to keep you involved with what is \n            happening here at Bitcoin Bingo. <br />We will be updating our website over the next weeks and our team will \n            be adding features and content we think you'll love! We also want to keep you informed about our first test game \n            which will be launching soon! Our mission is to use the most widely played games to help folks get accustomed to crypto. <br />\n            We know it can be a daunting and crowded space, but we got you covered! At Bitcoin Bingo we aim to be more than \n            a lottery site or another crypto startup. Our goal is to show people how seamless it is to earn crypto by simply playing Bingo. \n            We appreciate your support and interest.\n            <br />\n            <br />\n            Cheers,\n            <br />\nBitcoin Bingo Team\n</h6>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default SuccessModal;","import React, { Component } from \"react\";\nimport Modal from \"react-modal\";\n// import axios from \"axios\";\n\nclass ErrorModal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modalIsOpen: false\n    };\n\n    this.openModal = this.openModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  openModal() {\n    this.setState({ modalIsOpen: true });\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n    this.state.modalIsOpen = this.props.open;\n    // this.setState({ modelIsOpen: true });\n    // this.setState({ modalIsOpen });\n\n    return (\n      <Modal\n        className=\"bg-modal\"\n        isOpen={this.state.modalIsOpen}\n        onRequestClose={this.closeModal}\n        // gets rid of ERR: 'Please use `Modal.setAppElement(el)` or set `appElement={el}`\n        appElement={document.getElementById(\"root\")}\n      >\n        <div className=\"modal-content\">\n          <div className=\"close-modal\" onClick={() => this.props.onClose()}>\n            +\n          </div>\n          Thanks!\n          <br />\n          <br />\n          <h6 className=\"error-modal-writing\">You have already subscribed. <br /><br />Our mission is to use the most widely played games to help folks get accustomed to crypto. \n            We know it can be a daunting and crowded space, but we got you covered! At Bitcoin Bingo we aim to be more than a \n            lottery site or another crypto startup. <br /><br />Our goal is to show people how seamless it is to earn crypto by simply playing Bingo! See you soon.\n            <br />\n            <br />\n            Cheers,\n            <br />\n            Bitcoin Bingo Team\n            </h6>\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default ErrorModal;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n// img\nimport layoutLogo from '../../img/bingo-left.jpeg';\nimport mainLogo from '../../img/bitcoinbingologo.png';\n// modals\nimport SuccessModal from '../modals/successModal/SuccessModal';\nimport ErrorModal from '../modals/errorModal/ErrorModal';\n// styles\nimport { Footer } from '../footer/Footer.styles'\nimport {\n  FormGroupContainer,\n  LandingBody,\n  LandingContainer,\n  LandingEnd,\n  LandingInner,\n  LandingParagraph,\n  LandingTitle,\n  LandingTitle2,\n  LeftSide,\n  RightSide\n} from './Landing.styles';\n\nconst Landing = () => {\n  let newUser;\n\n  const [isSuccessModalOpen, setIsSuccessModalOpen] = useState(false);\n  const [isErrorModalOpen, setIsErrorModalOpen] = useState(false);\n\n  const [formData, setFormData] = useState({\n    email: ''\n  });\n  const { email } = formData;\n\n  // for typing in input fields\n  const onChange = e => {\n    console.log(\"onChange called\");\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n\n  // for refreshing page after success trial\n  const onSuccessModalClose = e => {\n    setIsSuccessModalOpen(false);\n    window.location.reload();\n  }\n\n  // submit button\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n      newUser = {\n        email: email.toLowerCase().trim(),\n        // username: username.toLowerCase().trim()\n      };\n      const body = JSON.stringify(newUser);\n\n      console.log(\"Pre api call\");\n      console.log(' ');\n      const res = await axios.post('/api/subscription', body, config);\n      console.log(\"Post api call\");\n      console.log('res: ', res);\n      const success = res.data.success;\n      const subscription = res.data.subscription;\n\n      // Show user not found if success false AND subscription is false\n      if (success) {\n        setIsSuccessModalOpen(true);\n      } else {\n        setIsErrorModalOpen(true);\n      }\n\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  return (\n    <LandingBody>\n      <LandingContainer>\n        <LandingInner>\n          <LeftSide>\n            <img src={mainLogo} alt='' className='landing-img' />\n            <LandingTitle>PLAY BINGO.<br /></LandingTitle>\n            <LandingTitle2>EARN BITCOIN!</LandingTitle2>\n            <LandingParagraph>We're building a better Lottery, <br /> and we want <span id='you'>YOU</span> to be a part of it.</LandingParagraph><br />\n            <LandingEnd>Join our community to get access to FREE games<br /> when we launch!</LandingEnd>\n            <form action=\"api/subscription\" method=\"POST\" onSubmit={e => onSubmit(e)}>\n              <FormGroupContainer>\n                {/* <input\n                  type=\"text\"\n                  name=\"username\"\n                  id=\"username\"\n                  className=\"form-control\"\n                  placeholder=\"NAME\"\n                  onChange={e => onChange(e)}\n                /> */}\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  className=\"form-control\"\n                  placeholder=\"EMAIL\"\n                  onChange={e => onChange(e)}\n                  required\n                />\n                <button id=\"layout-button\" type=\"submit\" className=\"btn btn-danger btn-block\">GET EARLY ACCESS</button>\n                {/* <div id='landing-buttons'>\n                  <button id=\"top-landing-button-1\">\n                    <Link to='/login'>LOGIN</Link>\n                  </button>\n                  <button id='top-landing-button-2'>\n                    <Link to='/register'>SIGN-UP</Link>\n                  </button>\n                </div> */}\n                <Footer>© 2020 Copyright. Bitcoin Bingo, all rights reserved.</Footer>\n              </FormGroupContainer>\n            </form>\n          </LeftSide>\n          <RightSide>\n            <img src={layoutLogo} alt='landing-img' className='landing-rightImg' />\n          </RightSide>\n        </LandingInner>\n        <ErrorModal open={isErrorModalOpen} onClose={() => setIsErrorModalOpen()} />\n        <SuccessModal open={isSuccessModalOpen} onClose={() => onSuccessModalClose()} />\n      </LandingContainer>\n    </LandingBody>\n  )\n}\n\nexport default Landing;\n","import styled from 'styled-components';\n\nexport const BlackBoxLogin = styled.div`\n    background-color: #000000;\n    border-radius: 4px;\n    height: 80px;\n    font-size: 12px;\n    margin-top: 45px;\n    opacity: 50%;\n    padding-top: 10px;\n    width: 15%;\n    @media (max-width: 700px) {\n        font-size: 13px;\n        height: 100px;\n        margin-bottom: 150px;\n        padding-bottom: 30px;\n        padding-top: 20px;\n        opacity: .75;\n        width: 75%;\n    }\n`;\n\nexport const LoginContainer = styled.div`\n    position: relative;\n    height: 145vh;\n    @media (max-width: 700px) {\n        margin: auto;\n        height: 160vh;\n    }\n`;\n\nexport const LoginInner = styled.div`\n    align-items: center;\n    color: #fff;\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: center;\n    margin: auto;\n    margin-top: 100px;\n    text-align: center;\n    width: 80%;\n    @media (max-width: 700px) {\n        height: 30%;\n        margin-top: 150px;\n    }\n`;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// styles\nimport { FormGroupContainer } from '../../layout/Landing.styles';\nimport { BlackBoxLogin, LoginContainer, LoginInner } from './Login.styles';\nimport { Footer } from '../../footer/Footer.styles';\n// actions\nimport { login } from '../../../actions/auth';\n// components\nimport Navbar from '../../navbar/Navbar'\n// import axios from 'axios';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password)\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />\n    }\n\n    return (\n        <LoginContainer>\n            <Navbar page={\"login\"}/>\n            <div>\n                <LoginInner>\n                    {/* <p className=\"title\"> LOGIN</p> */}\n                    <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                        <FormGroupContainer>\n                            <input\n                                type=\"email\"\n                                placeholder=\"Email Address\"\n                                name=\"email\"\n                                value={email}\n                                onChange={(e) => onChange(e)}\n                                required\n                            />\n                        </FormGroupContainer>\n                        <FormGroupContainer>\n                            <input\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                minLength=\"6\"\n                                value={password}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </FormGroupContainer>\n                        <br />\n                        <input id='login-button' type=\"submit\" value=\"LOGIN\" />\n                        <br />\n                        <br />\n                        <h4>Forgot Password?</h4>\n                    </form>\n                    <BlackBoxLogin>\n                        No account? Registration is free!<br />\n                        <span className='blackbox-links'><Link to=\"/register\">REGISTER</Link></span>\n                    </BlackBoxLogin>\n                    <Footer>© 2019 Copyright Bitcoin Bingo, all rights reserved</Footer>\n                </LoginInner>\n            </div>\n        </LoginContainer>\n    )\n}\n\n// props get added here\nLogin.propTypes = {\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n    // setAlert: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { login })(Login)\n","import styled from 'styled-components';\n\nexport const BlackBoxRegister = styled.div`\n    background-color: #000000;\n    border-radius: 4px;\n    height: 80px;\n    font-size: 12px;\n    margin-top: 45px;\n    opacity: 50%;\n    padding-top: 10px;\n    width: 15%;\n    @media (max-width: 700px) {\n        font-size: 13px;\n        height: 100px;\n        opacity: .75;\n        width: 65%;\n    }\n`;\n\nexport const RegisterButton = styled.div`\n    border-radius: 6px;\n    background: #ff9501;\n    color: #fff;\n    font-size: 20px;\n    margin: auto;\n    margin-top: 15px;\n    padding: 11px;\n    width: 170px;\n    @media (max-width: 700px) {\n        font-size: 10px;\n    }\n`;\n\nexport const RegisterContainer = styled.div`\n    position: relative;\n    /* background: url('../img/showcase.jpg') no-repeat center center/cover; */\n    height: 170vh;\n    @media (max-width: 700px) {\n        margin: auto;\n        height: 190vh;\n    }\n`;\n\nexport const RegisterInner = styled.div`\n    align-items: center;\n    color: #fff;\n    display: flex;\n    height: 100%;\n    flex-direction: column;\n    justify-content: center;\n    margin: auto;\n    margin-top: 100px;\n    text-align: center;\n    width: 80%;\n    @media (max-width: 700px) {\n        margin-top: 150px;\n    }\n`;","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n// styles\nimport { FormGroupContainer } from '../../layout/Landing.styles';\nimport { BlackBoxRegister } from '../register/Register.styles';\nimport { RegisterButton, RegisterContainer, RegisterInner } from './Register.styles';\nimport { Footer } from '../../footer/Footer.styles';\n// actions\nimport { register } from '../../../actions/auth';\n// components\nimport Navbar from '../../navbar/Navbar'\n// import axios from 'axios';\n\nconst Register = ({ register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        btcAddress: '',\n        password: '',\n        password2: '',\n        subscription: false\n    });\n\n    const { name, email, btcAddress, password, password2, subscription } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        if (password !== password2) {\n            console.log('Passwords dont match', 'danger');\n        } else {\n            register({ name, email, btcAddress, password, subscription });\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to='/dashboard' />\n    }\n\n    return (\n        <RegisterContainer>\n            <Navbar page={\"register\"} /> \n            <div>\n                <RegisterInner>\n                    {/* <p className=\"title\"> CREATE YOUR ACCOUNT</p> */}\n                    <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                        <FormGroupContainer>\n                            <input\n                                type=\"text\"\n                                placeholder=\"Name\"\n                                name=\"name\"\n                                value={name}\n                                onChange={(e) => onChange(e)}\n                                required\n                            />\n                        </FormGroupContainer>\n                        <FormGroupContainer>\n                            <input\n                                type=\"email\"\n                                placeholder=\"Email Address\"\n                                name=\"email\"\n                                value={email}\n                                onChange={(e) => onChange(e)}\n                                required\n                            />\n                        </FormGroupContainer>\n                        <FormGroupContainer>\n                            <input\n                                type=\"text\"\n                                placeholder=\"BTC Address\"\n                                name=\"btcAddress\"\n                                minLength=\"34\"\n                                value={btcAddress}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </FormGroupContainer>\n                        <FormGroupContainer>\n                            <input\n                                type=\"password\"\n                                placeholder=\"Password\"\n                                name=\"password\"\n                                minLength=\"6\"\n                                value={password}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </FormGroupContainer>\n                        <FormGroupContainer>\n                            <input\n                                type=\"password\"\n                                placeholder=\"Confirm Password\"\n                                name=\"password2\"\n                                minLength=\"6\"\n                                value={password2}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </FormGroupContainer>\n                        <br />\n                        <input type=\"checkbox\" value={subscription} /> Subscribe to our newsletter for my chance at free Bingo cards and BIG rewards!\n                        <br /><br />\n                        <input id='register-button' type=\"submit\" value=\"REGISTER\" />\n                    </form>\n                    <BlackBoxRegister>\n                        Already have an account? <br />\n                        <span className='blackbox-links'><Link to=\"/login\">LOGIN</Link></span>\n                    </BlackBoxRegister>\n                    <Footer>© 2019 Copyright Bitcoin Bingo, all rights reserved</Footer>\n                </RegisterInner>\n            </div>\n        </RegisterContainer>\n    )\n}\n\nRegister.propTypes = {\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool,\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { register })(Register)","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'; \nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n  <Route \n    {...rest} \n    render={props => \n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    } \n  />\n)\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n}\n\n// pulls state from auth reducer\nconst mapStateToProps = state => ({\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)","import { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({\n    auth\n})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport setAuthToken from './utils/setAuthToken';\n// actions\nimport { loadUser } from './actions/auth'\n// components\nimport Dashboard from './components/dashboard/Dashboard';\nimport Landing from './components/layout/Landing';\nimport Login from './components/auth/login/Login';\nimport Register from './components/auth/register/Register';\nimport PrivateRoute from './components/routing/PrivateRoute';\n// redux\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Route exact path='/' component={Landing} />\n          <section>\n            <Switch>\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/register' component={Register} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/bitcoinbingologo.6fd1a243.png\";","module.exports = __webpack_public_path__ + \"static/media/bingo-left.c1daa684.jpeg\";"],"sourceRoot":""}